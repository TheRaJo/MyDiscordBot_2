import discord
import sys
import random
import datetime
import asyncio
import imap_handler 

COMMAND_PREFIX = "!"
TOKEN_FILE = "token.txt"

def load_token():

    try:
        with open(TOKEN_FILE, "r") as f:
            token = f.read().strip() 
            if not token:
                print(f"[HIBA] A '{TOKEN_FILE}' f√°jl √ºres. K√©rlek, √≠rd bele a botod tokenj√©t.")
                sys.exit(1) 
            return token
    except FileNotFoundError:
        print(f"[HIBA] Nem tal√°lhat√≥ a '{TOKEN_FILE}' f√°jl.")
        print(f"K√©rlek, hozd l√©tre a '{TOKEN_FILE}' nev≈± f√°jlt ugyanabban a mapp√°ban, ahol a bot fut,")
        print("√©s illeszd bele a Discord botod tokenj√©t.")
        sys.exit(1) 

DISCORD_TOKEN = load_token()


intents = discord.Intents.default()
intents.message_content = True
intents.members = True
intents.reactions = True

client = discord.Client(intents=intents)

@client.event
async def on_ready():
    
    print(f'Sikeresen bejelentkezve mint: {client.user}')
    print('------')

@client.event
async def on_member_join(member):
    """
    Esem√©nykezel≈ë, amikor egy √∫j felhaszn√°l√≥ csatlakozik a szerverhez.
    √údv√∂zl≈ë √ºzenetet k√ºld √©s felsz√≥l√≠tja a szab√°lyzat elolvas√°s√°ra.
    """
    global rules_message_id # Hozz√°f√©r√©s a glob√°lis v√°ltoz√≥hoz

    # Keresd meg a csatorn√°t, ahov√° az √ºdv√∂zl≈ë √ºzenetet k√ºldeni szeretn√©d.
    # Haszn√°lhatsz egy konkr√©t csatorna ID-t, vagy megpr√≥b√°lhatod megtal√°lni a "welcome" vagy "rules" nev≈± csatorn√°t.
    # Ha nincs ilyen, akkor a szerver alap√©rtelmezett rendszer√ºzenet csatorn√°j√°t haszn√°lja.
    welcome_channel = discord.utils.get(member.guild.channels, name="welcome") or \
                      discord.utils.get(member.guild.channels, name="szabalyzat") or \
                      member.guild.system_channel

    if welcome_channel:
        welcome_message = (
            f"√údv√∂zl√ºnk, {member.mention}, a(z) **{member.guild.name}** szerveren!\n"
            f"K√©rlek, olvasd el a <#YOUR_RULES_CHANNEL_ID> csatorn√°n tal√°lhat√≥ szab√°lyzatunkat, √©s fogadd el a reakci√≥val, "
            f"hogy hozz√°f√©rj a t√∂bbi csatorn√°hoz."
        )
        # Cser√©ld le a <#YOUR_RULES_CHANNEL_ID> hely√©re a szab√°lyzat csatorn√°d t√©nyleges ID-j√©t.
        # P√©ld√°ul: f"K√©rlek, olvasd el a <#123456789012345678> csatorn√°n tal√°lhat√≥ szab√°lyzatunkat..."
        sent_message = await welcome_channel.send(welcome_message)
        rules_message_id = sent_message.id # T√°roljuk az elk√ºld√∂tt √ºzenet ID-j√©t
        print(f"√údv√∂zl≈ë √ºzenet elk√ºldve {member.name} felhaszn√°l√≥nak a(z) {welcome_channel.name} csatorn√°ra. √úzenet ID: {rules_message_id}")
    else:
        print(f"[HIBA] Nem tal√°lhat√≥ √ºdv√∂zl≈ë csatorna a(z) {member.guild.name} szerveren.")

@client.event
async def on_raw_reaction_add(payload):
    """
    Esem√©nykezel≈ë, amikor egy felhaszn√°l√≥ reakci√≥t ad egy √ºzenethez.
    Ez akkor is m≈±k√∂dik, ha az √ºzenet nincs a bot gyors√≠t√≥t√°r√°ban.
    """
    if payload.guild_id is None: # Csak szervereken bel√ºli reakci√≥kat kezel√ºnk
        return

    # Ellen≈ërizz√ºk, hogy a reakci√≥ a szab√°lyzat √ºzenetre t√∂rt√©nt-e
    if payload.message_id == rules_message_id:
        guild = client.get_guild(payload.guild_id)
        if guild is None:
            return

        member = guild.get_member(payload.user_id)
        if member is None or member.bot: # Ne adjunk rangot a botoknak
            return

       
        if str(payload.emoji) == 'üëç':
            # Keresd meg a "Tag" nev≈± rangot
            role = discord.utils.get(guild.roles, name="Tag")
            if role:
                if role not in member.roles: # Csak akkor adjuk hozz√°, ha m√©g nincs meg neki
                    await member.add_roles(role)
                    print(f"'{member.name}' felhaszn√°l√≥ megkapta a '{role.name}' rangot a szab√°lyzat elfogad√°s√°√©rt.")
                else:
                    print(f"'{member.name}' felhaszn√°l√≥ m√°r rendelkezik a '{role.name}' ranggal.")
            else:
                print(f"[HIBA] Nem tal√°lhat√≥ 'Tag' nev≈± rang a(z) {guild.name} szerveren. K√©rlek, hozd l√©tre!")
        else:
            print(f"Nem a v√°rt emoji ({payload.emoji}) a szab√°lyzat √ºzenetre.")
    # else:
    #     print(f"Reakci√≥ egy m√°sik √ºzenetre: {payload.message_id}")

@client.event
async def on_message(message):
    """
    Figyeli az √ºzeneteket √©s reag√°l a parancsokra.
    """
   
    if message.author == client.user:
        return

    if not message.content.startswith(COMMAND_PREFIX):
        return

    command = message.content[len(COMMAND_PREFIX):]

    if command == 'hello':
        await message.channel.send(f'Szia, {message.author.mention}!')

    if command == 'kocka':
        dobas = random.randint(1, 6)
        await message.channel.send(f'{message.author.mention} a te dob√°sod: **{dobas}**!')

    if command == 'tagok':
        guild = message.guild
        if guild is None:
            await message.channel.send("Ez a parancs csak szerveren bel√ºl haszn√°lhat√≥.")
            return

        tag_role = discord.utils.get(guild.roles, name="Tag")
        if tag_role is None:
            await message.channel.send("Nem tal√°lhat√≥ 'Tag' nev≈± rang a szerveren.")
            return

        members_with_tag_role = []
        for member in guild.members:
            if tag_role in member.roles:
                members_with_tag_role.append(member.display_name)

        if members_with_tag_role:
            response = "**Tag ranggal rendelkez≈ë felhaszn√°l√≥k:**\n"
            response += "\n".join(members_with_tag_role)
            await message.channel.send(response)
        else:
            await message.channel.send("Jelenleg nincs 'Tag' ranggal rendelkez≈ë felhaszn√°l√≥.")

    if command == 'ping':
        time_taken = datetime.datetime.now(datetime.timezone.utc) - message.created_at
        message_latency = round(time_taken.total_seconds() * 1000)
        websocket_latency = round(client.latency * 1000)

        await message.channel.send(
            f"Pong! üèì\n"
            f"Teljes k√©sleltet√©s: **{message_latency}ms**\n"
            f"Websocket v√°laszid≈ë: **{websocket_latency}ms**"
        )

      if command == 'segitseg':
        response = (
            f"**El√©rhet≈ë parancsok:**\n"
            f"`{COMMAND_PREFIX}hello` - A bot k√∂sz√∂n neked.\n"
            f"`{COMMAND_PREFIX}kocka` - Dob egy hatoldal√∫ kock√°val.\n"
            f"`{COMMAND_PREFIX}ping` - Megm√©ri a bot v√°laszidej√©t.\n"
            f"`{COMMAND_PREFIX}tagok` - Kilist√°zza az √∂sszes 'Tag' rang√∫ felhaszn√°l√≥t.\n"
            f"`{COMMAND_PREFIX}segitseg` - Megjelen√≠ti ezt az √ºzenetet."
        )
        await message.channel.send(response)

async def periodic_email_check():
   
    NOTIFICATION_CHANNEL_ID = 847443762967216128 
    await client.wait_until_ready()
    notification_channel = client.get_channel(NOTIFICATION_CHANNEL_ID)

    if not notification_channel:
        print(f"[HIBA] Az √©rtes√≠t√©si csatorna ID-vel {NOTIFICATION_CHANNEL_ID} nem tal√°lhat√≥.")
        return

    while not client.is_closed():
        try:
            print("√öj e-mailek ellen≈ërz√©se...")
           
            new_email_subjects = await imap_handler.check_for_new_emails()

            if new_email_subjects:
                for subject in new_email_subjects:
                    message_content = f"√öj email √©rkezett: **{subject}**"
                    await notification_channel.send(message_content)
                    print(f"√ârtes√≠t√©s elk√ºldve a t√°rgyr√≥l: {subject}")
            else:
                print("Nincs √∫j e-mail.")

        except Exception as e:
            print(f"[HIBA] Hiba t√∂rt√©nt a periodikus e-mail ellen≈ërz√©s sor√°n: {e}")
        await asyncio.sleep(60)  #sec

client.loop.create_task(periodic_email_check())

try:
    client.run(DISCORD_TOKEN)
except discord.errors.LoginFailure:
    print("[HIBA] √ârv√©nytelen Discord Token. K√©rlek, ellen≈ërizd a token.txt f√°jl tartalm√°t.")
except Exception as e:
    print(f"[HIBA] Hiba t√∂rt√©nt a bot futtat√°sa sor√°n: {e}")
